on: [push]

name: CI

jobs:
  check:
    name: Build
    # runs-on: [self-hosted, linux]
    runs-on: ubuntu-latest

    # Cross-compile
    # Supported targets: https://github.com/rust-embedded/cross#supported-targets
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu # 64-bit Linux (kernel 2.6.32+, glibc 2.11+)
          - x86_64-pc-windows-gnu # 64-bit MinGW (Windows 7+)
          - aarch64-unknown-linux-gnu
          # - x86_64-apple-darwin # 64-bit macOS (10.7+, Lion+)

    steps:
      - uses: actions/checkout@v2
        #      - uses: actions-rs/toolchain@v1
        #        with:
        #          toolchain: stable
        #      - run: rustup component add rustfmt
        #
        #      - name: check
        #        uses: actions-rs/cargo@v1
        #        with:
        #          command: check
        #          use-cross: true
        #          args: --release --workspace --target=${{ matrix.target }}
        #
        #      - name: build
        #        uses: actions-rs/cargo@v1
        #        with:
        #          command: build
        #          use-cross: true
        #          args: --release --workspace --target=${{ matrix.target }}

      - name: Setup docker context for buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          endpoint: builders


      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

            # - uses: actions-rs/cargo@v1
      #   with:
      #     use-cross: true
      #     command: build
      #     args: --release --target=${{ matrix.target }}
